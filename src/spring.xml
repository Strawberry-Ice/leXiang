<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    	http://www.springframework.org/schema/data/jpa
     	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
     		http://www.springframework.org/schema/task  
						http://www.springframework.org/schema/task/spring-task-4.0.xsd">
	<!-- <mvc:annotation-driven /> -->
	<!-- 【配置视图解析器】 -->
	<!-- InternalResourceViewResolver会在ModelAndView返回的视图名前加上prefix指定的前缀，再在最后加上suffix指定的后缀 -->
	<!-- 由于UserController返回的ModelAndView中的视图名是userlist，故该视图解析器将在/WEB-INF/jsp/userlist.jsp处查找视图 -->
	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/jsp/"/> <property name="suffix" value=".jsp"/> 
		</bean> -->
	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath*:application.properties</value>
			</list>
		</property>
	</bean>
	<!-- 导入springMvc.xml配置文件 <import resource="classpath:spring-mvc.xml" /> -->
	<!-- 加载数据库配置 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 加载数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="maxActive" value="${db.maxActive}" />
		<property name="maxIdle" value="${db.maxIdle}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="maxWait" value="${db.maxWait}" />
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="testOnBorrow">
			<value>false</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>
		<property name="validationQuery">
			<value>select 1</value>
		</property>
		<property name="validationQueryTimeout">
			<value>1</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>30000</value>
		</property>
		<property name="numTestsPerEvictionRun">
			<value>16</value>
		</property>
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.jfdh.model</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>


	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">200</prop>
						<prop key="kaptcha.textproducer.font.size">95</prop>
						<prop key="kaptcha.image.height">130</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!--<context:component-scan base-package="com.jfdh.dao"/> <context:component-scan 
		base-package="com.jfdh.service"/> -->

	<!-- 声明式事务 -->

	<bean name="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--<aop:config> <aop:pointcut id="productServiceMethods" expression="execution(* 
		com.service..*.*(..))" /> <aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods" 
		/> </aop:config> <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="save*" propagation="REQUIRED" /> <tx:method 
		name="add*" propagation="REQUIRED" /> <tx:method name="create*" propagation="REQUIRED" 
		/> <tx:method name="insert*" propagation="REQUIRED" /> <tx:method name="update*" 
		propagation="REQUIRED" /> <tx:method name="merge*" propagation="REQUIRED" 
		/> <tx:method name="del*" propagation="REQUIRED" /> <tx:method name="remove*" 
		propagation="REQUIRED" /> <tx:method name="put*" propagation="REQUIRED" /> 
		<tx:method name="*" propagation="SUPPORTS" read-only="true" /> </tx:attributes> 
		</tx:advice> -->

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:annotation-config />

	<context:component-scan base-package="com.jfdh" />

	<tx:annotation-driven transaction-manager="jpaTransactionManager" />
	<bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<qualifier value="jpaTransactionManager"></qualifier>
	</bean>

	<jpa:repositories base-package="com.jfdh.repository"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="jpaTransactionManager" />

	<!-- spring task -->
	<task:annotation-driven />

	<context:component-scan base-package="com.jfdh.task" />
</beans>  